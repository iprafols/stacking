# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Pytest
on:
  push:
    paths-ignore:
      - '**/*.md'
  pull_request:
    paths-ignore:
      - '**/*.md'
  merge_group:
env:
  SETUP_XVFB: True  # avoid issues if mpl tries to open a GUI window

jobs:
  test:
    runs-on: ubuntu-latest
    # the whole CI pipeline will be skipped if [ci skip] is in the commit msg
    if: '!contains(github.event.head_commit.message, "[ci skip]")'

    timeout-minutes: 60
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
#    env:
#      OMP_NUM_THREADS: 1
#      MKL_NUM_THREADS: 1
#      OPENBLAS_NUM_THREADS: 1
#      NUMEXPR_NUM_THREADS: 1
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        sudo apt-get -y install libbz2-dev
        python -m pip install --upgrade pip
        pip install wheel pytest pytest-cov coveralls
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Install stacking
      run: pip install -e .
    - name: Test with pytest
      timeout-minutes: 30
      run: |
          pytest --capture=tee-sys --cov --cov-report xml --cov-config=.coveragerc .

    # allow connecting to the github action run via ssh if [ci debug] has been in the commit msg
    - name: Debug with tmate
      if: ${{ always() && contains(github.event.head_commit.message, '[ci debug]') }}
      uses: mxschmitt/action-tmate@v3
      with:
        limit-access-to-actor: true

    - name: Archive test results
      if: ${{ failure() }}
      uses: actions/upload-artifact@v4
      with:
        name: test_results_v${{ matrix.python-version }}
        path: /home/runner/work/stacking/stacking/stacking/tests/results

    - name: Coveralls
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
      run: coveralls
